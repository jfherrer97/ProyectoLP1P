
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDIFWHILEFORrightEQUALSleftLTLTEGTGTEleftLPARENRPARENAND APPEND COMMA COMMENT DOT ELSE EQUALS EQUALV FALSE FOR GT GTE ID IF IN INPUT ISALPHA LBRACE LBRACKET LPAREN LT LTE NOT NOTEQUALV NUMBER PRINT RBRACE RBRACKET RPAREN STRING TRUE WHILEprogram : blockblock :  statementList\n    elements : expression\n            | expression COMMA elements\n    statement : PRINT LPAREN STRING RPAREN statement : PRINT LPAREN expression RPAREN statement :  PRINT LPAREN expression COMMA STRING COMMA expression RPARENstatement : ID DOT APPEND LPAREN expression RPARENstatement : ID EQUALS expressionstatement : IF condition LBRACE statementList RBRACE  statementIF statement : WHILE condition LBRACE statementList RBRACE statement : FOR ID IN ID LBRACE statementList RBRACEstatement : emptystatementIF : ELSE LBRACE statementList RBRACEstatementIF : ELSE IF condition LBRACE statementList RBRACE statementIFstatementIF : emptystatementList : statement\n                    | statement statementListcondition : expression relation expression\n                    | expression relation expression relation expression relation expression relation : ANDrelation : EQUALVrelation : NOTEQUALVrelation : LTrelation : GTrelation : LTErelation : GTErelation : NOT INexpression : termfactor : ID DOT ISALPHA LPAREN RPARENterm : factorfactor : IDfactor : STRINGfactor : LBRACKET elements RBRACKET\n                | LBRACKET  RBRACKETfactor : INPUT LPAREN STRING RPAREN  factor : NUMBERfactor : FALSEfactor : TRUEempty :'
    
_lr_action_items = {'PRINT':([0,4,10,17,18,19,20,23,24,25,31,32,44,47,49,50,57,64,68,69,70,72,73,75,77,80,83,84,88,89,91,92,],[5,5,-13,-29,-31,-32,-33,-37,-38,-39,-9,5,-35,5,-5,-6,-34,-40,-36,-11,5,-8,-10,-16,-30,5,-12,-7,-14,5,-40,-15,]),'ID':([0,4,7,8,9,10,12,14,17,18,19,20,21,23,24,25,31,32,33,34,35,36,37,38,39,40,44,47,48,49,50,52,55,57,58,64,65,68,69,70,71,72,73,75,77,80,81,82,83,84,88,89,91,92,],[6,6,19,19,27,-13,19,19,-29,-31,-32,-33,19,-37,-38,-39,-9,6,19,-21,-22,-23,-24,-25,-26,-27,-35,6,61,-5,-6,19,-28,-34,19,-40,19,-36,-11,6,19,-8,-10,-16,-30,6,19,19,-12,-7,-14,6,-40,-15,]),'IF':([0,4,10,17,18,19,20,23,24,25,31,32,44,47,49,50,57,64,68,69,70,72,73,74,75,77,80,83,84,88,89,91,92,],[7,7,-13,-29,-31,-32,-33,-37,-38,-39,-9,7,-35,7,-5,-6,-34,-40,-36,-11,7,-8,-10,81,-16,-30,7,-12,-7,-14,7,-40,-15,]),'WHILE':([0,4,10,17,18,19,20,23,24,25,31,32,44,47,49,50,57,64,68,69,70,72,73,75,77,80,83,84,88,89,91,92,],[8,8,-13,-29,-31,-32,-33,-37,-38,-39,-9,8,-35,8,-5,-6,-34,-40,-36,-11,8,-8,-10,-16,-30,8,-12,-7,-14,8,-40,-15,]),'FOR':([0,4,10,17,18,19,20,23,24,25,31,32,44,47,49,50,57,64,68,69,70,72,73,75,77,80,83,84,88,89,91,92,],[9,9,-13,-29,-31,-32,-33,-37,-38,-39,-9,9,-35,9,-5,-6,-34,-40,-36,-11,9,-8,-10,-16,-30,9,-12,-7,-14,9,-40,-15,]),'$end':([0,1,2,3,4,10,11,17,18,19,20,23,24,25,31,44,49,50,57,64,68,69,72,73,75,77,83,84,88,91,92,],[-40,0,-1,-2,-17,-13,-18,-29,-31,-32,-33,-37,-38,-39,-9,-35,-5,-6,-34,-40,-36,-11,-8,-10,-16,-30,-12,-7,-14,-40,-15,]),'RBRACE':([4,10,11,17,18,19,20,23,24,25,31,32,44,47,49,50,53,57,60,64,68,69,70,72,73,75,77,78,80,83,84,85,88,89,90,91,92,],[-17,-13,-18,-29,-31,-32,-33,-37,-38,-39,-9,-40,-35,-40,-5,-6,64,-34,69,-40,-36,-11,-40,-8,-10,-16,-30,83,-40,-12,-7,88,-14,-40,91,-40,-15,]),'LPAREN':([5,22,30,56,],[12,46,52,66,]),'DOT':([6,19,],[13,42,]),'EQUALS':([6,],[14,]),'STRING':([7,8,12,14,21,33,34,35,36,37,38,39,40,46,51,52,55,58,65,71,81,82,],[20,20,28,20,20,20,-21,-22,-23,-24,-25,-26,-27,59,62,20,-28,20,20,20,20,20,]),'LBRACKET':([7,8,12,14,21,33,34,35,36,37,38,39,40,52,55,58,65,71,81,82,],[21,21,21,21,21,21,-21,-22,-23,-24,-25,-26,-27,21,-28,21,21,21,21,21,]),'INPUT':([7,8,12,14,21,33,34,35,36,37,38,39,40,52,55,58,65,71,81,82,],[22,22,22,22,22,22,-21,-22,-23,-24,-25,-26,-27,22,-28,22,22,22,22,22,]),'NUMBER':([7,8,12,14,21,33,34,35,36,37,38,39,40,52,55,58,65,71,81,82,],[23,23,23,23,23,23,-21,-22,-23,-24,-25,-26,-27,23,-28,23,23,23,23,23,]),'FALSE':([7,8,12,14,21,33,34,35,36,37,38,39,40,52,55,58,65,71,81,82,],[24,24,24,24,24,24,-21,-22,-23,-24,-25,-26,-27,24,-28,24,24,24,24,24,]),'TRUE':([7,8,12,14,21,33,34,35,36,37,38,39,40,52,55,58,65,71,81,82,],[25,25,25,25,25,25,-21,-22,-23,-24,-25,-26,-27,25,-28,25,25,25,25,25,]),'APPEND':([13,],[30,]),'LBRACE':([15,17,18,19,20,23,24,25,26,44,54,57,61,68,74,77,86,87,],[32,-29,-31,-32,-33,-37,-38,-39,47,-35,-19,-34,70,-36,80,-30,89,-20,]),'AND':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[34,-29,-31,-32,-33,-37,-38,-39,-35,34,-34,-36,34,-30,]),'EQUALV':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[35,-29,-31,-32,-33,-37,-38,-39,-35,35,-34,-36,35,-30,]),'NOTEQUALV':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[36,-29,-31,-32,-33,-37,-38,-39,-35,36,-34,-36,36,-30,]),'LT':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[37,-29,-31,-32,-33,-37,-38,-39,-35,37,-34,-36,37,-30,]),'GT':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[38,-29,-31,-32,-33,-37,-38,-39,-35,38,-34,-36,38,-30,]),'LTE':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[39,-29,-31,-32,-33,-37,-38,-39,-35,39,-34,-36,39,-30,]),'GTE':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[40,-29,-31,-32,-33,-37,-38,-39,-35,40,-34,-36,40,-30,]),'NOT':([16,17,18,19,20,23,24,25,44,54,57,68,76,77,],[41,-29,-31,-32,-33,-37,-38,-39,-35,41,-34,-36,41,-30,]),'RPAREN':([17,18,19,20,23,24,25,28,29,44,57,59,63,66,68,77,79,],[-29,-31,-32,-33,-37,-38,-39,49,50,-35,-34,68,72,77,-36,-30,84,]),'COMMA':([17,18,19,20,23,24,25,28,29,44,45,57,62,68,77,],[-29,-31,-32,-33,-37,-38,-39,-33,51,-35,58,-34,71,-36,-30,]),'RBRACKET':([17,18,19,20,21,23,24,25,43,44,45,57,67,68,77,],[-29,-31,-32,-33,44,-37,-38,-39,57,-35,-3,-34,-4,-36,-30,]),'IN':([27,41,],[48,55,]),'ISALPHA':([42,],[56,]),'ELSE':([64,91,],[74,74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'statementList':([0,4,32,47,70,80,89,],[3,11,53,60,78,85,90,]),'statement':([0,4,32,47,70,80,89,],[4,4,4,4,4,4,4,]),'empty':([0,4,32,47,64,70,80,89,91,],[10,10,10,10,75,10,10,10,75,]),'condition':([7,8,81,],[15,26,86,]),'expression':([7,8,12,14,21,33,52,58,65,71,81,82,],[16,16,29,31,45,54,63,45,76,79,16,87,]),'term':([7,8,12,14,21,33,52,58,65,71,81,82,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([7,8,12,14,21,33,52,58,65,71,81,82,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'relation':([16,54,76,],[33,65,82,]),'elements':([21,58,],[43,67,]),'statementIF':([64,91,],[73,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_programa','ProductosCorrectos_Parser.py',26),
  ('block -> statementList','block',1,'p_block','ProductosCorrectos_Parser.py',31),
  ('elements -> expression','elements',1,'p_elements','ProductosCorrectos_Parser.py',38),
  ('elements -> expression COMMA elements','elements',3,'p_elements','ProductosCorrectos_Parser.py',39),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_print','ProductosCorrectos_Parser.py',44),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print_expressioin','ProductosCorrectos_Parser.py',49),
  ('statement -> PRINT LPAREN expression COMMA STRING COMMA expression RPAREN','statement',8,'p_statement_assign_print','ProductosCorrectos_Parser.py',53),
  ('statement -> ID DOT APPEND LPAREN expression RPAREN','statement',6,'p_statement_Append','ProductosCorrectos_Parser.py',57),
  ('statement -> ID EQUALS expression','statement',3,'p_statementPrincipal','ProductosCorrectos_Parser.py',62),
  ('statement -> IF condition LBRACE statementList RBRACE statementIF','statement',6,'p_statementIFPrinciapl','ProductosCorrectos_Parser.py',68),
  ('statement -> WHILE condition LBRACE statementList RBRACE','statement',5,'p_statementWhile','ProductosCorrectos_Parser.py',74),
  ('statement -> FOR ID IN ID LBRACE statementList RBRACE','statement',7,'p_statementFor','ProductosCorrectos_Parser.py',79),
  ('statement -> empty','statement',1,'p_statementEmpty','ProductosCorrectos_Parser.py',85),
  ('statementIF -> ELSE LBRACE statementList RBRACE','statementIF',4,'p_statementElse','ProductosCorrectos_Parser.py',91),
  ('statementIF -> ELSE IF condition LBRACE statementList RBRACE statementIF','statementIF',7,'p_statementElseIF','ProductosCorrectos_Parser.py',97),
  ('statementIF -> empty','statementIF',1,'p_statementIFEmpty','ProductosCorrectos_Parser.py',103),
  ('statementList -> statement','statementList',1,'p_statementListMultiple','ProductosCorrectos_Parser.py',109),
  ('statementList -> statement statementList','statementList',2,'p_statementListMultiple','ProductosCorrectos_Parser.py',110),
  ('condition -> expression relation expression','condition',3,'p_conditionPrinciapl','ProductosCorrectos_Parser.py',117),
  ('condition -> expression relation expression relation expression relation expression','condition',7,'p_conditionPrinciapl','ProductosCorrectos_Parser.py',118),
  ('relation -> AND','relation',1,'p_relationAND','ProductosCorrectos_Parser.py',123),
  ('relation -> EQUALV','relation',1,'p_relationEQUAL','ProductosCorrectos_Parser.py',128),
  ('relation -> NOTEQUALV','relation',1,'p_relationNotEqula','ProductosCorrectos_Parser.py',133),
  ('relation -> LT','relation',1,'p_relationLessThan','ProductosCorrectos_Parser.py',138),
  ('relation -> GT','relation',1,'p_relationGreaterThan','ProductosCorrectos_Parser.py',144),
  ('relation -> LTE','relation',1,'p_relationLessThanEquals','ProductosCorrectos_Parser.py',150),
  ('relation -> GTE','relation',1,'p_relationGreaterThanEqual','ProductosCorrectos_Parser.py',156),
  ('relation -> NOT IN','relation',2,'p_relationNotIN','ProductosCorrectos_Parser.py',161),
  ('expression -> term','expression',1,'p_expressionType','ProductosCorrectos_Parser.py',166),
  ('factor -> ID DOT ISALPHA LPAREN RPAREN','factor',5,'p_expresion_isAlpha','ProductosCorrectos_Parser.py',172),
  ('term -> factor','term',1,'p_termPrincipal','ProductosCorrectos_Parser.py',177),
  ('factor -> ID','factor',1,'p_factorID','ProductosCorrectos_Parser.py',183),
  ('factor -> STRING','factor',1,'p_factorString','ProductosCorrectos_Parser.py',190),
  ('factor -> LBRACKET elements RBRACKET','factor',3,'p_factorListStruc','ProductosCorrectos_Parser.py',195),
  ('factor -> LBRACKET RBRACKET','factor',2,'p_factorListStruc','ProductosCorrectos_Parser.py',196),
  ('factor -> INPUT LPAREN STRING RPAREN','factor',4,'p_factorInput','ProductosCorrectos_Parser.py',201),
  ('factor -> NUMBER','factor',1,'p_factorNumber','ProductosCorrectos_Parser.py',206),
  ('factor -> FALSE','factor',1,'p_factor_Bool_False','ProductosCorrectos_Parser.py',211),
  ('factor -> TRUE','factor',1,'p_factor_Bool_True','ProductosCorrectos_Parser.py',216),
  ('empty -> <empty>','empty',0,'p_empty','ProductosCorrectos_Parser.py',222),
]

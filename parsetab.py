
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDIFWHILEFORrightVARrightEQUALSleftLTLTEGTGTEleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENAPPEND BREAK COMILLA COMMA COMMENT DIVIDE DO DOT ELSE ELSEIF EQUALNUMBER EQUALS EQUALV FALSE FOR GT GTE ID IF IN INPUT ISALPHA LBRACE LBRACKET LPAREN LT LTE MINUS NOTEQUALV NUMBER PLUS PLUSPLUS PRINT PRODUCTO RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE VAR WHILEprogram : blockblock : constDecl varDecl statement statementListconstDecl : VAR constAssignmentList SEMICOLONconstDecl : emptyconstAssignmentList : ID EQUALS NUMBER statement : ID EQUALS LBRACKET elements RBRACKET statement : ID EQUALS LBRACKET  RBRACKET\n    elements : expression\n            | expression COMMA elements\n    constAssignmentList : constAssignmentList COMMA ID EQUALS NUMBERvarDecl : VAR identList SEMICOLONvarDecl : emptyidentList : IDidentList : identList COMMA IDstatement : INPUT LPAREN STRING RPAREN statement :  ID EQUALS INPUT LPAREN STRING RPAREN\n\n    statement : PRINT LPAREN STRING RPAREN statement : PRINT LPAREN expression RPAREN statement :  PRINT LPAREN expression COMMA STRING COMMA expression RPARENstatement : ID EQUALS expressionstatement : IF condition LBRACE statement RBRACE  statementIFstatement : WHILE condition LBRACE statement RBRACE statement : FOR ID EQUALS NUMBER SEMICOLON condition SEMICOLON ID PLUSPLUS LBRACE statement RBRACE statement : FOR ID IN ID LBRACE statement RBRACEstatement : emptystatementIF : ELSE LBRACE statement RBRACEstatementIF : ELSE IF condition LBRACE statement RBRACEstatementIF : emptystatementList : statementstatementList : statementList SEMICOLON statementcondition : expression relation expressionrelation : EQUALVrelation : LTrelation : GTrelation : LTErelation : GTEexpression : termfactor : ID DOT ISALPHA LPAREN RPARENfactor : ID DOT APPEND LPAREN expression RPARENexpression : addingOperator termexpression : expression addingOperator termaddingOperator : PLUSaddingOperator : MINUSterm : factorterm : term multiplyingOperator factormultiplyingOperator : TIMESmultiplyingOperator : DIVIDEfactor : IDfactor : STRINGfactor : NUMBERfactor : FALSEfactor : TRUEfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'VAR':([0,3,5,21,],[4,7,-4,-3,]),'ID':([0,3,4,5,6,7,8,11,15,16,17,18,21,22,26,28,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,51,55,56,57,58,59,60,61,62,63,64,65,66,69,71,76,79,80,81,85,86,89,94,95,98,100,101,102,103,105,106,107,109,110,115,116,117,118,119,120,124,125,128,129,131,],[-54,-54,10,-4,12,20,-12,12,36,36,43,-25,-3,46,36,36,-37,36,-44,-42,-43,-48,36,-49,-50,-51,-52,-11,72,12,36,-20,12,36,36,-32,-33,-34,-35,-36,36,-46,-47,-40,12,92,-7,-15,-17,-18,-41,-45,-53,-6,36,-54,36,-22,36,12,-16,36,-21,-28,-38,12,36,-39,123,-24,-19,-26,12,12,-27,-23,]),'INPUT':([0,3,5,6,8,11,18,21,26,31,33,36,38,39,40,41,44,48,51,55,66,69,76,79,80,81,85,86,89,94,98,101,103,105,107,109,110,115,117,119,120,124,125,128,129,131,],[-54,-54,-4,13,-12,13,-25,-3,50,-37,-44,-48,-49,-50,-51,-52,-11,13,-20,13,-40,13,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,13,-16,-21,-28,-38,13,-39,-24,-19,-26,13,13,-27,-23,]),'PRINT':([0,3,5,6,8,11,18,21,31,33,36,38,39,40,41,44,48,51,55,66,69,76,79,80,81,85,86,89,94,98,101,103,105,107,109,110,115,117,119,120,124,125,128,129,131,],[-54,-54,-4,14,-12,14,-25,-3,-37,-44,-48,-49,-50,-51,-52,-11,14,-20,14,-40,14,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,14,-16,-21,-28,-38,14,-39,-24,-19,-26,14,14,-27,-23,]),'IF':([0,3,5,6,8,11,18,21,31,33,36,38,39,40,41,44,48,51,55,66,69,76,79,80,81,85,86,89,94,98,101,103,105,107,108,109,110,115,117,119,120,124,125,128,129,131,],[-54,-54,-4,15,-12,15,-25,-3,-37,-44,-48,-49,-50,-51,-52,-11,15,-20,15,-40,15,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,15,-16,-21,116,-28,-38,15,-39,-24,-19,-26,15,15,-27,-23,]),'WHILE':([0,3,5,6,8,11,18,21,31,33,36,38,39,40,41,44,48,51,55,66,69,76,79,80,81,85,86,89,94,98,101,103,105,107,109,110,115,117,119,120,124,125,128,129,131,],[-54,-54,-4,16,-12,16,-25,-3,-37,-44,-48,-49,-50,-51,-52,-11,16,-20,16,-40,16,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,16,-16,-21,-28,-38,16,-39,-24,-19,-26,16,16,-27,-23,]),'FOR':([0,3,5,6,8,11,18,21,31,33,36,38,39,40,41,44,48,51,55,66,69,76,79,80,81,85,86,89,94,98,101,103,105,107,109,110,115,117,119,120,124,125,128,129,131,],[-54,-54,-4,17,-12,17,-25,-3,-37,-44,-48,-49,-50,-51,-52,-11,17,-20,17,-40,17,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,17,-16,-21,-28,-38,17,-39,-24,-19,-26,17,17,-27,-23,]),'SEMICOLON':([0,3,5,6,8,9,11,18,19,20,21,24,25,31,33,36,38,39,40,41,44,47,48,51,66,72,74,76,79,80,81,84,85,86,89,91,93,94,98,101,105,107,109,110,112,117,119,120,124,129,131,],[-54,-54,-4,-54,-12,21,-54,-25,44,-13,-3,-29,48,-37,-44,-48,-49,-50,-51,-52,-11,-5,-54,-20,-40,-14,-30,-7,-15,-17,-18,-31,-41,-45,-53,102,-10,-6,-54,-22,-16,-21,-28,-38,118,-39,-24,-19,-26,-27,-23,]),'$end':([0,1,2,3,5,6,8,11,18,21,24,25,31,33,36,38,39,40,41,44,48,51,66,74,76,79,80,81,85,86,89,94,98,101,105,107,109,110,117,119,120,124,129,131,],[-54,0,-1,-54,-4,-54,-12,-54,-25,-3,-29,-2,-37,-44,-48,-49,-50,-51,-52,-11,-54,-20,-40,-30,-7,-15,-17,-18,-41,-45,-53,-6,-54,-22,-16,-21,-28,-38,-39,-24,-19,-26,-27,-23,]),'COMMA':([9,19,20,31,33,36,38,39,40,41,47,53,54,66,72,77,85,86,89,93,97,110,117,],[22,45,-13,-37,-44,-48,-49,-50,-51,-52,-5,-49,82,-40,-14,95,-41,-45,-53,-10,106,-38,-39,]),'EQUALS':([10,12,43,46,],[23,26,70,73,]),'LPAREN':([13,14,15,16,26,28,32,34,35,37,49,50,56,57,58,59,60,61,62,63,64,65,87,88,95,100,102,106,116,],[27,28,37,37,37,37,37,-42,-43,37,37,78,37,37,-32,-33,-34,-35,-36,37,-46,-47,99,100,37,37,37,37,37,]),'PLUS':([15,16,26,28,30,31,33,36,37,38,39,40,41,49,51,53,54,56,58,59,60,61,62,66,68,77,84,85,86,89,95,100,102,106,110,111,114,116,117,],[34,34,34,34,34,-37,-44,-48,34,-49,-50,-51,-52,34,34,-49,34,34,-32,-33,-34,-35,-36,-40,34,34,34,-41,-45,-53,34,34,34,34,-38,34,34,34,-39,]),'MINUS':([15,16,26,28,30,31,33,36,37,38,39,40,41,49,51,53,54,56,58,59,60,61,62,66,68,77,84,85,86,89,95,100,102,106,110,111,114,116,117,],[35,35,35,35,35,-37,-44,-48,35,-49,-50,-51,-52,35,35,-49,35,35,-32,-33,-34,-35,-36,-40,35,35,35,-41,-45,-53,35,35,35,35,-38,35,35,35,-39,]),'STRING':([15,16,26,27,28,32,34,35,37,49,56,57,58,59,60,61,62,63,64,65,78,82,95,100,102,106,116,],[38,38,38,52,53,38,-42,-43,38,38,38,38,-32,-33,-34,-35,-36,38,-46,-47,96,97,38,38,38,38,38,]),'NUMBER':([15,16,23,26,28,32,34,35,37,49,56,57,58,59,60,61,62,63,64,65,70,73,95,100,102,106,116,],[39,39,47,39,39,39,-42,-43,39,39,39,39,-32,-33,-34,-35,-36,39,-46,-47,91,93,39,39,39,39,39,]),'FALSE':([15,16,26,28,32,34,35,37,49,56,57,58,59,60,61,62,63,64,65,95,100,102,106,116,],[40,40,40,40,40,-42,-43,40,40,40,40,-32,-33,-34,-35,-36,40,-46,-47,40,40,40,40,40,]),'TRUE':([15,16,26,28,32,34,35,37,49,56,57,58,59,60,61,62,63,64,65,95,100,102,106,116,],[41,41,41,41,41,-42,-43,41,41,41,41,-32,-33,-34,-35,-36,41,-46,-47,41,41,41,41,41,]),'RBRACE':([18,31,33,36,38,39,40,41,51,55,66,69,76,79,80,81,83,85,86,89,90,94,98,101,103,105,107,109,110,113,115,117,119,120,121,124,125,127,128,129,130,131,],[-25,-37,-44,-48,-49,-50,-51,-52,-20,-54,-40,-54,-7,-15,-17,-18,98,-41,-45,-53,101,-6,-54,-22,-54,-16,-21,-28,-38,119,-54,-39,-24,-19,124,-26,-54,129,-54,-27,131,-23,]),'LBRACKET':([26,],[49,]),'LBRACE':([29,31,33,36,38,39,40,41,42,66,84,85,86,89,92,108,110,117,122,126,],[55,-37,-44,-48,-49,-50,-51,-52,69,-40,-31,-41,-45,-53,103,115,-38,-39,125,128,]),'EQUALV':([30,31,33,36,38,39,40,41,66,85,86,89,110,117,],[58,-37,-44,-48,-49,-50,-51,-52,-40,-41,-45,-53,-38,-39,]),'LT':([30,31,33,36,38,39,40,41,66,85,86,89,110,117,],[59,-37,-44,-48,-49,-50,-51,-52,-40,-41,-45,-53,-38,-39,]),'GT':([30,31,33,36,38,39,40,41,66,85,86,89,110,117,],[60,-37,-44,-48,-49,-50,-51,-52,-40,-41,-45,-53,-38,-39,]),'LTE':([30,31,33,36,38,39,40,41,66,85,86,89,110,117,],[61,-37,-44,-48,-49,-50,-51,-52,-40,-41,-45,-53,-38,-39,]),'GTE':([30,31,33,36,38,39,40,41,66,85,86,89,110,117,],[62,-37,-44,-48,-49,-50,-51,-52,-40,-41,-45,-53,-38,-39,]),'RPAREN':([31,33,36,38,39,40,41,52,53,54,66,68,85,86,89,96,99,110,111,114,117,],[-37,-44,-48,-49,-50,-51,-52,79,80,81,-40,89,-41,-45,-53,105,110,-38,117,120,-39,]),'RBRACKET':([31,33,36,38,39,40,41,49,66,75,77,85,86,89,104,110,117,],[-37,-44,-48,-49,-50,-51,-52,76,-40,94,-8,-41,-45,-53,-9,-38,-39,]),'TIMES':([31,33,36,38,39,40,41,53,66,85,86,89,110,117,],[64,-44,-48,-49,-50,-51,-52,-49,64,64,-45,-53,-38,-39,]),'DIVIDE':([31,33,36,38,39,40,41,53,66,85,86,89,110,117,],[65,-44,-48,-49,-50,-51,-52,-49,65,65,-45,-53,-38,-39,]),'DOT':([36,],[67,]),'IN':([43,],[71,]),'ISALPHA':([67,],[87,]),'APPEND':([67,],[88,]),'ELSE':([98,],[108,]),'PLUSPLUS':([123,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'constDecl':([0,],[3,]),'empty':([0,3,6,11,48,55,69,98,103,115,125,128,],[5,8,18,18,18,18,18,109,18,18,18,18,]),'varDecl':([3,],[6,]),'constAssignmentList':([4,],[9,]),'statement':([6,11,48,55,69,103,115,125,128,],[11,24,74,83,90,113,121,127,130,]),'identList':([7,],[19,]),'statementList':([11,],[25,]),'condition':([15,16,102,116,],[29,42,112,122,]),'expression':([15,16,26,28,37,49,56,95,100,102,106,116,],[30,30,51,54,68,77,84,77,111,30,114,30,]),'term':([15,16,26,28,32,37,49,56,57,95,100,102,106,116,],[31,31,31,31,66,31,31,31,85,31,31,31,31,31,]),'addingOperator':([15,16,26,28,30,37,49,51,54,56,68,77,84,95,100,102,106,111,114,116,],[32,32,32,32,57,32,32,57,57,32,57,57,57,32,32,32,32,57,57,32,]),'factor':([15,16,26,28,32,37,49,56,57,63,95,100,102,106,116,],[33,33,33,33,33,33,33,33,33,86,33,33,33,33,33,]),'relation':([30,],[56,]),'multiplyingOperator':([31,66,85,],[63,63,63,]),'elements':([49,95,],[75,104,]),'statementIF':([98,],[107,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','ProductosCorrectos_Parser.py',39),
  ('block -> constDecl varDecl statement statementList','block',4,'p_block','ProductosCorrectos_Parser.py',47),
  ('constDecl -> VAR constAssignmentList SEMICOLON','constDecl',3,'p_constDecl','ProductosCorrectos_Parser.py',53),
  ('constDecl -> empty','constDecl',1,'p_constDeclEmpty','ProductosCorrectos_Parser.py',60),
  ('constAssignmentList -> ID EQUALS NUMBER','constAssignmentList',3,'p_constAssignmentList1','ProductosCorrectos_Parser.py',67),
  ('statement -> ID EQUALS LBRACKET elements RBRACKET','statement',5,'p_struct_list','ProductosCorrectos_Parser.py',73),
  ('statement -> ID EQUALS LBRACKET RBRACKET','statement',4,'p_struct_list_empty','ProductosCorrectos_Parser.py',77),
  ('elements -> expression','elements',1,'p_elements','ProductosCorrectos_Parser.py',84),
  ('elements -> expression COMMA elements','elements',3,'p_elements','ProductosCorrectos_Parser.py',85),
  ('constAssignmentList -> constAssignmentList COMMA ID EQUALS NUMBER','constAssignmentList',5,'p_constAssignmentList2','ProductosCorrectos_Parser.py',88),
  ('varDecl -> VAR identList SEMICOLON','varDecl',3,'p_varDecl1','ProductosCorrectos_Parser.py',95),
  ('varDecl -> empty','varDecl',1,'p_varDeclEmpty','ProductosCorrectos_Parser.py',102),
  ('identList -> ID','identList',1,'p_identList1','ProductosCorrectos_Parser.py',109),
  ('identList -> identList COMMA ID','identList',3,'p_identList2','ProductosCorrectos_Parser.py',116),
  ('statement -> INPUT LPAREN STRING RPAREN','statement',4,'p_input','ProductosCorrectos_Parser.py',122),
  ('statement -> ID EQUALS INPUT LPAREN STRING RPAREN','statement',6,'p_statement_assign_input','ProductosCorrectos_Parser.py',125),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_print','ProductosCorrectos_Parser.py',132),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print_expressioin','ProductosCorrectos_Parser.py',137),
  ('statement -> PRINT LPAREN expression COMMA STRING COMMA expression RPAREN','statement',8,'p_statement_assign_print','ProductosCorrectos_Parser.py',140),
  ('statement -> ID EQUALS expression','statement',3,'p_statement1','ProductosCorrectos_Parser.py',144),
  ('statement -> IF condition LBRACE statement RBRACE statementIF','statement',6,'p_statement2','ProductosCorrectos_Parser.py',151),
  ('statement -> WHILE condition LBRACE statement RBRACE','statement',5,'p_statement3','ProductosCorrectos_Parser.py',158),
  ('statement -> FOR ID EQUALS NUMBER SEMICOLON condition SEMICOLON ID PLUSPLUS LBRACE statement RBRACE','statement',12,'p_statement4','ProductosCorrectos_Parser.py',165),
  ('statement -> FOR ID IN ID LBRACE statement RBRACE','statement',7,'p_statement5','ProductosCorrectos_Parser.py',172),
  ('statement -> empty','statement',1,'p_statementEmpty','ProductosCorrectos_Parser.py',179),
  ('statementIF -> ELSE LBRACE statement RBRACE','statementIF',4,'p_statementIF1','ProductosCorrectos_Parser.py',186),
  ('statementIF -> ELSE IF condition LBRACE statement RBRACE','statementIF',6,'p_statementIF2','ProductosCorrectos_Parser.py',192),
  ('statementIF -> empty','statementIF',1,'p_statementIFEmpty','ProductosCorrectos_Parser.py',198),
  ('statementList -> statement','statementList',1,'p_statementList1','ProductosCorrectos_Parser.py',204),
  ('statementList -> statementList SEMICOLON statement','statementList',3,'p_statementList2','ProductosCorrectos_Parser.py',211),
  ('condition -> expression relation expression','condition',3,'p_condition1','ProductosCorrectos_Parser.py',218),
  ('relation -> EQUALV','relation',1,'p_relation1','ProductosCorrectos_Parser.py',225),
  ('relation -> LT','relation',1,'p_relation2','ProductosCorrectos_Parser.py',232),
  ('relation -> GT','relation',1,'p_relation3','ProductosCorrectos_Parser.py',239),
  ('relation -> LTE','relation',1,'p_relation4','ProductosCorrectos_Parser.py',246),
  ('relation -> GTE','relation',1,'p_relation5','ProductosCorrectos_Parser.py',253),
  ('expression -> term','expression',1,'p_expression1','ProductosCorrectos_Parser.py',260),
  ('factor -> ID DOT ISALPHA LPAREN RPAREN','factor',5,'p_expresion_isAlpha','ProductosCorrectos_Parser.py',267),
  ('factor -> ID DOT APPEND LPAREN expression RPAREN','factor',6,'p_expresion_Append','ProductosCorrectos_Parser.py',271),
  ('expression -> addingOperator term','expression',2,'p_expression2','ProductosCorrectos_Parser.py',276),
  ('expression -> expression addingOperator term','expression',3,'p_expression3','ProductosCorrectos_Parser.py',283),
  ('addingOperator -> PLUS','addingOperator',1,'p_addingOperator1','ProductosCorrectos_Parser.py',290),
  ('addingOperator -> MINUS','addingOperator',1,'p_addingOperator2','ProductosCorrectos_Parser.py',297),
  ('term -> factor','term',1,'p_term1','ProductosCorrectos_Parser.py',304),
  ('term -> term multiplyingOperator factor','term',3,'p_term2','ProductosCorrectos_Parser.py',311),
  ('multiplyingOperator -> TIMES','multiplyingOperator',1,'p_multiplyingOperator1','ProductosCorrectos_Parser.py',318),
  ('multiplyingOperator -> DIVIDE','multiplyingOperator',1,'p_multiplyingOperator2','ProductosCorrectos_Parser.py',325),
  ('factor -> ID','factor',1,'p_factor1','ProductosCorrectos_Parser.py',332),
  ('factor -> STRING','factor',1,'p_factor0','ProductosCorrectos_Parser.py',339),
  ('factor -> NUMBER','factor',1,'p_factor2','ProductosCorrectos_Parser.py',345),
  ('factor -> FALSE','factor',1,'p_factor_Bool_False','ProductosCorrectos_Parser.py',350),
  ('factor -> TRUE','factor',1,'p_factor_Bool_True','ProductosCorrectos_Parser.py',355),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor3','ProductosCorrectos_Parser.py',361),
  ('empty -> <empty>','empty',0,'p_empty','ProductosCorrectos_Parser.py',368),
]
